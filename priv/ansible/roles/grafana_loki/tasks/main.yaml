- name: grafana_loki
  block:
    - name: Check if Loki binary exists
      stat:
        path: '/root/loki-{{ loki_architecture }}'
      register: loki_binary

    - name: Get installed Loki version
      command: '/root/loki-{{ loki_architecture }} --version'
      register: installed_loki_version
      changed_when: false
      failed_when: false
      when: loki_binary.stat.exists

    - name: Set Loki version fact
      set_fact:
        current_loki_version: >-
          {{ installed_loki_version.stdout |
          regex_search('^v[0-9]+\.[0-9]+\.[0-9]+') | default('') }}
      when: loki_binary.stat.exists

    - name: 'Download Loki {{ loki_architecture }}/{{ loki_version }}'
      unarchive:
        src: >-
          https://github.com/grafana/loki/releases/download/{{ loki_version
          }}/loki-{{ loki_architecture }}.zip
        dest: /root
        remote_src: true
      when: not loki_binary.stat.exists or current_loki_version != loki_version

    - name: Add loki-config config to /root/loki-config.yaml
      template:
        src: loki-config.yaml.j2
        dest: /root/loki-config.yaml
        owner: root
        group: root
        mode: 0644

    - name: Add loki.service file to /etc/systemd/system/loki_systemd.service
      template:
        src: loki_systemd.service.j2
        dest: /etc/systemd/system/loki.service
        owner: root
        group: root
        mode: 0644

    - name: Enable loki service
      systemd:
        name: loki
        enabled: true

    - name: Stop loki service
      systemd:
        name: loki
        state: stopped
      when: ansible_facts.services[loki_systemd] is not defined

    - name: Start loki service
      systemd:
        daemon_reload: true
        name: loki
        state: started

  become: true
