# Pulls debian image from AWS AMI
data "aws_ami" "debian-13" {
  most_recent = true
  owners      = ["136693071363"]

  filter {
    name   = "name"
    values = ["debian-13*amd64*"]
  }
}

module "ec2_instance" {
  source = "./modules/aws-instance"

  for_each = var.<%= @app_name %>_project

  resource_group = var.resource_group
  instance_name  = each.value.name
  environment    = var.environment

  tags                       = try(each.value.tags, null)
  instance_type              = try(each.value.instance_type, null)
  instance_count             = try(each.value.instance_count, null)
  instance_availability_zone = try(each.value.instance_availability_zone, null)
  instance_ami               = coalesce(
    try(each.value.instance_ami, null),
    # "ADD AMI HASH WHEN YOU GET ONE",
    data.aws_ami.debian-13.id
  )

  instance_ebs_primary_size          = try(each.value.instance_ebs_primary_size, null)
  instance_ebs_secondary_size        = try(each.value.instance_ebs_secondary_size, null)
  instance_ebs_secondary_snapshot_id = try(each.value.instance_ebs_secondary_snapshot_id, null)


  enable_eip        = try(each.value.enable_eip, null)
  enable_ebs        = try(each.value.enable_ebs, null)
  enable_elb        = try(each.value.enable_lb, null)
  enable_elb_https  = try(each.value.enable_lb_https, null)
  disable_public_ip = try(each.value.disable_public_ip, null)
  disable_ipv6      = try(var.disable_ipv6, each.value.disable_ipv6, null)

  elb_port          = try(each.value.elb_port, null)
  elb_instance_port = try(each.value.elb_instance_port, null)

  private_ip = try(each.value.private_ip, null)

  security_group_id = module.app_security_group.security_group_id
  subnet_ids        = module.vpc.public_subnets

  key_pair_key_name = aws_key_pair.key_pair.key_name
}

