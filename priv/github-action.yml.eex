name: Apply Terraform, Build & Release


# Use this when you want to deploy on success of specific workflows
# on:
# workflow_run:
#   workflows: ["Test"]
#   types: [completed]
#   branches: [main]
on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  ApplyAndrelease:
    name: Apply Terraform Changes and Release

    runs-on: ubuntu-latest
    # Use this when you want to deploy on success of specific workflows
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}

    container:
      image: mikaak/elixir-terraform-ansible-builder:1.14-otp-25-debian
      env:
        MIX_ENV: prod
        AWS_ACCESS_KEY_ID: ${{ secrets.DEPLOY_EX_AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.DEPLOY_EX_AWS_SECRET_ACCESS_KEY }}

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 25


      - name: Cache Deps & Build
        uses: actions/cache@v2
        with:
          key: ${{github.ref}}-deploy-ex-${{ hashFiles('./mix.lock') }}

          path: |
            ./deploy/terraform/.terraform/
            ./_build/
            ./deps/

          restore-keys: |
            ${{github.ref}}-deploy-ex-${{ hashFiles('./mix.lock') }}
            ${{github.ref}}-deploy-ex

      - name: Install Rebar & Hex
        run: mix local.hex --force --if-missing && mix local.rebar --force --if-missing

      - name: Install Dependencies
        run: mix deps.get

      - name: Compile Project
        run: mix compile

      - name: Run Terraform Init
        run: mix terraform.init -y

      - name: Run Terraform Build & Apply
        run: mix terraform.build --force && mix terraform.apply --auto-approve

      - name: Run Ansible Build
        run: mix ansible.build --force --new-only

      - name: Maybe Github Update
        run: |
          chmod +x ./.github/github-action-maybe-commit-terraform-changes.sh &&
          ./.github/github-action-maybe-commit-terraform-changes.sh

      - name: create-json
        id: create-json
        uses: jsdaniell/create-json@1.1.2
        with:
          name: "env.json"
          json: ${{ toJson(secrets) }}

      - name: Compile Project for Release
        run: env RELEASE_BUILD=true $(./.github/github-action-secrets-to-env.sh env.json) mix compile

      - name: Build Releases
        run: |
          rm -rf _build/**/*-*.tar.gz _build/**/rel/ &&
          env RELEASE_BUILD=true $(./.github/github-action-secrets-to-env.sh env.json) mix deploy_ex.release --force --recompile --all

      - name: Upload S3 Releases
        run: mix deploy_ex.upload

      - name: Add PEM File From Secrets
        run: |
          echo "${{ secrets.EC2_PEM_FILE }}" > <%= @pem_file_path %> &&
          chmod 0400 <%= @pem_file_path %>

      - name: Run Ansible Deploy
        run: mix ansible.deploy -l
