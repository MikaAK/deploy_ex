name: Apply Terraform, Build & Release

on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  Apply:
    name: Apply Terraform Changes

    runs-on: ubuntu-latest

    container:
      image: mikaak/elixir-terraform-ansible-builder:1.13-otp-25-debian
      env:
        MIX_ENV: prod
        AWS_ACCESS_KEY_ID: ${{ secrets.DEPLOY_EX_AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.DEPLOY_EX_AWS_SECRET_ACCESS_KEY }}

    steps:
      - uses: actions/checkout@v2

      - name: Cache Deps & Build
        uses: actions/cache@v2
        with:
          key: ${{github.ref}}-terraform-${{ hashFiles('./mix.lock') }}

          restore-keys: |
            ${{github.ref}}-terraform-${{ hashFiles('./mix.lock') }}
            ${{github.ref}}-deps-build-cache-${{ hashFiles('./mix.lock') }}
            ${{github.ref}}-deps-build-cache-
            ${{github.ref}}-terraform-

          path: |
            ./deploy/terraform/.terraform/
            ./_build/
            ./deps/

      - name: Install Rebar & Hex
        run: mix local.hex --force --if-missing && mix local.rebar --force --if-missing

      - name: Install Dependencies
        run: mix deps.get

      - name: Compile Project
        run: mix compile

      - name: Run Terraform Init
        run: mix terraform.init -y

      - name: Add PEM File From Secrets
        run: |
          echo "${{ secrets.EC2_PEM_FILE }}" > <%= @pem_file_path %> &&
          chmod 0400 <%= @pem_file_path %>

      - name: Run Terraform Build & Apply
        run: mix terraform.build -f && mix terraform.apply -y

      - name: Run Ansible Build
        run: mix ansible.build -f

      - name: Maybe Github Update
        run: |
          chmod +x ./.github/github-action-maybe-commit-terraform-changes.sh &&
          ./.github/github-action-maybe-commit-terraform-changes.sh


  Release:
    name: Release

    needs: [Apply]

    runs-on: ubuntu-latest

    container:
      image: mikaak/elixir-terraform-ansible-builder:1.13-otp-25-debian
      env:
        MIX_ENV: prod
        AWS_ACCESS_KEY_ID: ${{ secrets.DEPLOY_EX_AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.DEPLOY_EX_AWS_SECRET_ACCESS_KEY }}

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 25

      - name: Cache Deps & Build
        uses: actions/cache@v2
        with:
          key: ${{github.ref}}-deps-build-cache-${{ hashFiles('./mix.lock') }}

          restore-keys: |
            ${{github.ref}}-deps-build-cache-

          path: |
            ./_build/
            ./deps/

      - name: Install Rebar & Hex
        run: mix local.hex --force --if-missing && mix local.rebar --force --if-missing

      - name: Install Dependencies
        run: mix deps.get

      - name: Compile Project
        run: mix compile

      - name: Build Releases
        run: mix deploy_ex.release --force

      - name: Upload S3 Releases
        run: mix deploy_ex.upload

      - name: Add PEM File From Secrets
        run: |
          echo "${{ secrets.EC2_PEM_FILE }}" > <%= @pem_file_path %> &&
          chmod 0400 <%= @pem_file_path %>

      - name: create-json
        id: create-json
        uses: jsdaniell/create-json@1.1.2
        with:
          name: "env.json"
          json: ${{ toJson(secrets) }}

      - name: Run Ansible Deploy
        run: |
          chmod +x ./.github/github-actions-secrets-to-json-file.sh &&
          ./.github/github-actions-secrets-to-json-file.sh env-file.json "$(cat env.json)" &&
          mix ansible.deploy -l --copy-json-env-file env-file.json
